<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.1.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>info.cafferata</groupId>
	<artifactId>rnh</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>rnh</name>
	<description>RNH web applicatie</description>
	<!--	Java Development Kit 8-->
	<properties>
		<java.version>1.8</java.version>
		<kotlin.version>1.3.61</kotlin.version>
		<firstAppSrcDir>frontend</firstAppSrcDir>
		<installDirectory>target</installDirectory>
		<node.version>v9.2.0</node.version>
		<npm.version>5.0.0</npm.version>
		<frontend-maven-plugin.version>1.6</frontend-maven-plugin.version>
	</properties>
	<!-- For Java 9 alvast toegevoegd ! nu nog niet in gebruik ivm Novi opleiding -->
	<dependencies>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		</dependency>
		<!-- For Java 8 Date/Time Support -->
		<!-- JWT allows you to decode, verify and generate JWT tokens -->
		<!-- For Working with Json Web Tokens (JWT) -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.1</version>
		</dependency>
		<!-- bean with the configuration that we supplied in the application -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-quartz</artifactId>
		</dependency>
		<!-- bean with the configuration that we supplied in the application -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.3.2</version>
		</dependency>
		<!-- Javax Bean Validation Api-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<!-- API for time- voor klok regatta bureau voor JAVA version 8 -->
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<!-- Configuration processor Generates metadata about classes in your application that are annotated with properties -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- focuses on providing both authentication and authorization to Java applications -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<!--Spring Boot Security Test -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- driver voor DB -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jdbc</artifactId>
		</dependency>
		<!-- Java specification for managing relational data in Java applications -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- voor het gemak -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<!-- open source Java-based framework to create a micro Service -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- REST api helpers - DEV - -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-rest-hal-explorer</artifactId>
		</dependency>
		<!-- Developer Tool helpers :-)) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<!--Database- to save data deze is speciaal voor Novi -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!--Database- to save data deze is speciaal voor PROD -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!--Database- to save data deze is speciaal voor OTA omgevingen -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<!--Lombok cleans up code by making codes shorter geen getters/setters enz.. -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- ivm Full REst API -->
		<dependency>
			<groupId>org.webjars.npm</groupId>
			<artifactId>axios</artifactId>
			<version>0.19.2</version>
		</dependency>
		<!-- Unit testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<!-- dependency for testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<!-- JUnit Testing platform for testing frameworks on JVM-->
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Helpers voor API zaken -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>2.0.1.Final</version>
		</dependency>
		<!-- Helpers voor framework -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>5.2.6.RELEASE</version>
		</dependency>
		<!-- Helpers voor framework -->
		<dependency>
			<groupId>org.springframework.ws</groupId>
			<artifactId>spring-ws-core</artifactId>
			<version>3.0.9.RELEASE</version>
		</dependency>
		<!-- Dependency for mail API nodig voor RESETTEN en account aanmaken & remote monitoring -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mailapi</artifactId>
			<version>1.4.3</version>
		</dependency>
	</dependencies>

	<!-- om alles te laten starten en te compileren !.-->
	<build>
		<sourceDirectory>${project.basedir}/src/main/java/info/cafferata/rnh</sourceDirectory>
		<testSourceDirectory>${project.basedir}/src/test/java/info/cafferata/rnh</testSourceDirectory>
		<plugins>
			<plugin>
				<groupId>com.heroku.sdk</groupId>
				<artifactId>heroku-maven-plugin</artifactId>
				<version>1.0.3</version>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>
